<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bba.basics.dao.BaseDao">

    <insert id="batchInsert" parameterType="java.util.Map">
		insert into ${tableName}(
		    <foreach collection="fieldList" item="fieldVO" separator=",">
		        <if test="fieldVO.databaseField!=null">
		            "${fieldVO.databaseField}"
		        </if>
		    </foreach>
		)
		<foreach collection="dataList" item="vo" separator="union all">
			select
			<foreach collection="fieldList" item="fieldVO" separator=",">
                <if test="fieldVO.databaseField!=null">
                	<if test="fieldVO.DATE!=null">to_date(</if>
                    <if test="fieldVO.DATETIME!=null">to_date(</if>
                    #{vo.${fieldVO.columnField},jdbcType=VARCHAR}
                    <if test="fieldVO.DATE!=null">,'yyyy-MM-dd')</if>
                    <if test="fieldVO.DATETIME!=null">,'yyyy-MM-dd HH24:mi:ss')</if>
                </if>
            </foreach>
        	from dual
		</foreach>
    </insert>

    <update id="batchUpdate" parameterType="java.util.Map">
		<foreach collection="dataList" item="vo" open="begin" close="end;">
			update ${tableName} set 
			<foreach collection="vo.fieldList" item="fieldVO" separator=",">
		        <if test="fieldVO.databaseField!=null">
		            <if test="fieldVO.DATE!=null">${fieldVO.databaseField}=to_date(#{vo.dataVO.${fieldVO.columnField},jdbcType=VARCHAR},'yyyy-MM-dd')</if>
		            <if test="fieldVO.DATETIME!=null">${fieldVO.databaseField}=to_date(#{vo.dataVO.${fieldVO.columnField},jdbcType=VARCHAR},'yyyy-MM-dd HH24:mi:ss')</if>
		            <if test="fieldVO.DATE==null and fieldVO.DATETIME==null">
		            ${fieldVO.databaseField}=#{vo.dataVO.${fieldVO.columnField},jdbcType=VARCHAR}</if>
		        </if>
		    </foreach>
		    where
		    <foreach collection="vo.whereFieldList" item="fieldVO" separator="and">
		        <if test="fieldVO.databaseField!=null">
		            ${fieldVO.databaseField}=#{vo.whereVO.${fieldVO.columnField},jdbcType=VARCHAR}
		        </if>
		    </foreach>;
		</foreach>
    </update>

    <delete id="batchDelete" parameterType="java.util.Map">
         delete from ${tableName}
         <if test="dataList!=null">
         	<foreach collection="dataList" item="dataVO" open="where" separator="or">
				(
	            <foreach collection="dataVO.fieldList" item="fieldVO" separator="and">
	            	${fieldVO.databaseField}=#{dataVO.data.${fieldVO.columnField},jdbcType=VARCHAR}
	            </foreach>
			 	)
        	</foreach>
         </if>
    </delete>

    <select id="findListByProperty" parameterType="java.util.Map" resultType="map">
		select 
			<foreach collection="fieldList" item="field" separator=",">${field.databaseField} "${field.columnField}"</foreach>
		 from ${tableName}
		<if test="dataList!=null">
			<foreach collection="dataList" item="voList" open="where" separator="or">
				(
				<foreach collection="voList" item="vo" separator="and">
			        <if test="vo.databaseField!=null">
			        	${vo.databaseField}=#{vo.value,jdbcType=VARCHAR}
			        </if>
			    </foreach>
			    )
		    </foreach>
		</if>
    </select>
  
</mapper>